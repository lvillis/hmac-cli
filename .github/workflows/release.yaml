name: Release

on:
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash

jobs:
  release:
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-musl
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            target_rustflags: ''
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            target_rustflags: ''

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust Toolchain Components
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: stable

      - name: Install AArch64 Toolchain
        if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu

      - name: Install ARM Toolchain
        if: ${{ matrix.target == 'arm-unknown-linux-musleabihf' || matrix.target == 'armv7-unknown-linux-musleabihf' }}
        run: |
          sudo apt-get update
          sudo apt-get install gcc-arm-linux-gnueabihf

      - name: Install X86_64 Toolchain
        if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
        run: |
          sudo apt-get update
          sudo apt-get install musl-tools

      - name: Ref Type
        id: ref-type
        run: cargo run --package ref-type -- --reference ${{ github.ref }}

      - name: chmod
        id: chmod
        run: chmod +x ./bin/package

      - name: Package
        id: package
        env:
          TARGET: ${{ matrix.target }}
          REF: ${{ github.ref }}
          OS: ${{ matrix.os }}
          TARGET_RUSTFLAGS: ${{ matrix.target_rustflags }}
        run: ./bin/package
        shell: bash

      - name: Publish Archive
        uses: softprops/action-gh-release@v2.2.0
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: false
          files: ${{ env.ARCHIVE }}
          prerelease: ${{ steps.ref-type.outputs.value != 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}